#!/bin/sh
# shellcheck disable=SC2064
set -eu

#
# This file installs the non-subscription repos and the dkpg hook
#

# ensure a predictable environment
PATH=/usr/sbin:/usr/bin:/sbin:/bin
\unalias -a

# installer main body:
_main() {
	# ensure $1 exists so 'set -u' doesn't error out
	{ [ "$#" -eq "0" ] && set -- ""; } >/dev/null 2>&1

	case "$1" in
	"--uninstall")
		# uninstall, requires root
		assert_root
		_uninstall
		;;
	"--install" | "")
		# install dpkg hooks, requires root
		assert_root
		_install "$@"
		;;
	*)
		# unknown flags, print usage and exit
		_usage
		;;
	esac
	exit 0
}

_uninstall() {
	set -x
	[ -f "/etc/apt/apt.conf.d/86pve-nags" ] &&
		rm -f "/etc/apt/apt.conf.d/86pve-nags"
	[ -f "/usr/share/pve-nag-buster.sh" ] &&
		rm -f "/usr/share/pve-nag-buster.sh"

	echo "Script and dpkg hooks removed, please manually remove /etc/apt/sources.list.d/{pve-no-subscription,ceph-no-subscription}.sources if desired"
}

_install() {
	# create hooks and no-subscription repo list, install hook script, run once

	VERSION_CODENAME=''
	. /etc/os-release
	if [ -n "$VERSION_CODENAME" ]; then
		RELEASE="$VERSION_CODENAME"
	else
		RELEASE=$(awk -F"[)(]+" '/VERSION=/ {print $2}' /etc/os-release)
	fi

	# create the pve-no-subscription source
	echo "Creating PVE no-subscription repo sources ..."
	cat <<-EOF >"/etc/apt/sources.list.d/pve-no-subscription.sources"
		# .sources file automatically generated by pve-nag-buster at $(date)
		#
		# If pve-nag-buster is installed again this file will be overwritten
		#
		Types: deb
		URIs: http://download.proxmox.com/debian/pve
		Suites: $RELEASE
		Components: pve-no-subscription
		Signed-By: /usr/share/keyrings/proxmox-archive-keyring.gpg
	EOF

	# create the ceph reef no-subscription sources
	echo "Creating Ceph no-subscription repo sources ..."
	cat <<-EOF >"/etc/apt/sources.list.d/ceph-no-subscription.sources"
		# .list file automatically generated by pve-nag-buster at $(date)
		#
		# If pve-nag-buster is installed again this file will be overwritten
		#
		Types: deb
		URIs: http://download.proxmox.com/debian/ceph-squid
		Suites: $RELEASE
		Components: no-subscription
		Signed-By: /usr/share/keyrings/proxmox-archive-keyring.gpg
	EOF

	# create dpkg pre/post install hooks for persistence
	echo "Creating dpkg hooks in /etc/apt/apt.conf.d ..."
	cat <<-'EOF' >"/etc/apt/apt.conf.d/86pve-nags"
		DPkg::Pre-Install-Pkgs {
		    "while read -r pkg; do case $pkg in *proxmox-widget-toolkit* | *pve-manager*) touch /tmp/.pve-nag-buster && exit 0; esac done < /dev/stdin";
		};

		DPkg::Post-Invoke {
		    "[ -f /tmp/.pve-nag-buster ] && { /usr/share/pve-nag-buster.sh; rm -f /tmp/.pve-nag-buster; }; exit 0";
		};
	EOF

	# install the hook script
	if [ ! -f "pve-nag-buster.sh" ]; then
		# fetch from github if there is no local one available
		echo "Fetching hook script from GitHub ..."
		wget https://raw.githubusercontent.com/kinghrothgar/pve-nag-buster/master/pve-nag-buster.sh \
			-q --show-progress -O "pve-nag-buster.sh"
	fi
	echo "Installing hook script as /usr/share/pve-nag-buster.sh"
	install -o root -m 0550 "pve-nag-buster.sh" "/usr/share/pve-nag-buster.sh"

	echo "Running patch script"
	/usr/share/pve-nag-buster.sh

	return 0
}

assert_root() { [ "$(id -u)" -eq '0' ] || { echo "This action requires root." && exit 1; }; }
_usage() { echo "Usage: $(basename "$0") (--uninstall)"; }

_main "$@"
